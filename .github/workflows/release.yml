name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
          # The base64 of the contents of your '.p12' key.
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          # The password to open the '.p12' key.
          MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
          # The base64 of the contents of your '.p8' key.
          MACOS_NOTARY_KEY: ${{ secrets.MACOS_NOTARY_KEY }}
          # The ID of the '.p8' key.
          # You can find it in the filename, as well as the Apple Developer Portal
          # website.
          MACOS_NOTARY_KEY_ID: ${{ secrets.MACOS_NOTARY_KEY_ID }}
          # The issuer UUID.
          # You can find it in the Apple Developer Portal website.
          MACOS_NOTARY_ISSUER_ID: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Task
        uses: go-task/setup-task@v1

      - name: Run tests
        run: task test

      - name: Run linter
        run: task lint

      - name: Build
        run: task build

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Task
        uses: go-task/setup-task@v1

      - name: Build
        run: task build

      - name: Test binary
        run: |
          ./bin/artifact-cli --help
